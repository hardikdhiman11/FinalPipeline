# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
 

jobs:
  build:

    runs-on: self-hosted
    permissions: write-all

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml


    #Stopping the currently running jar file
    - name: Stop JAR file
      run: |
        chmod +x deploy.sh
        ./deploy.sh
        

    #For starting we might need ssh key
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}



      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

        #Starting updated jar file
    - name: Start new JAR file on EC2
      run: |
       ssh -o StrictHostKeyChecking=no ubuntu@43.204.97.248 'cd /home/ubuntu/actions-runner/_work/FinalPipeline/FinalPipeline/target && java -jar spring-boot-my-springboot-app.jar &'

